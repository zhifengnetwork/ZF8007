<?php
/**
 * Created by PhpStorm.
 * User: MyPc
 * Date: 2019/4/23 0023
 * Time: 18:04
 */
namespace app\admin\controller;

use think\Db;
use think\Request;
use think\Session;

class Ad extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub

        check_user();
    }

    /**
     * 广告位列表
     * @return mixed
     * @throws \think\exception\DbException
     */
    public function ad_position_list()
    {
        $where['id'] = ['>', 0];
        $datemin = '';
        $datemax = '';
        $seach = isset($_GET['seach']) ? $_GET['seach'] : '';
        $page = 10;

        //搜索条件
        if($seach){
            $page = 0;
            $time = " 23:59:59";
            if($seach['m_conditions']){
                $m_conditions = str_replace(' ', '', $seach['m_conditions']);
                $where['name'] = ['like',"%$m_conditions%"];
            }
            if ($seach['datemin'] && $seach['datemax']) {
                $datemin = strtotime($seach['datemin']);
                $datemax = strtotime($seach['datemax'].$time);
                $where['add_time'] = [['>= time',$datemin],['<= time',$datemax],'and'];
            } elseif ($seach['datemin']) {
                $where['add_time'] = ['>= time',strtotime($seach['datemin'])];
            } elseif ($seach['datemax']) {
                $where['add_time'] = ['<= time',strtotime($seach['datemax'].$time)];
            }
        }

        $list = Db::name('ad_position')->where($where)->paginate($page);
        //处理创造者
//        foreach ($list as $key=>$value){
//            $list[$key]['user_id']=get_admin_name($value['user_id']);
//        }
        $count = count($list);
        $this->assign('seach',$seach);
        $this->assign('list',$list);
        $this->assign('count',$count);
        return $this->fetch();
    }

    /**
     * 广告列表
     * @return mixed
     * @throws \think\exception\DbException
     */
    public function ad_list()
    {
        $where['id'] = ['>', 0];
        $datemin = '';
        $datemax = '';
        $pid=input('id');
        if(!is_numeric($pid) || $pid<=0){
            return $this->fetch('error.html');
        }
        $where['pid']=$pid;
        $seach = isset($_GET['seach']) ? $_GET['seach'] : '';
        $page = 10;

        //搜索条件
        if($seach){
            $page = 0;
            $time = " 23:59:59";
            if($seach['m_conditions']){
                $m_conditions = str_replace(' ', '', $seach['m_conditions']);
                $where['name'] = ['like',"%$m_conditions%"];
            }
            if ($seach['datemin'] && $seach['datemax']) {
                $datemin = strtotime($seach['datemin']);
                $datemax = strtotime($seach['datemax'].$time);
                $where['add_time'] = [['>= time',$datemin],['<= time',$datemax],'and'];
            } elseif ($seach['datemin']) {
                $where['add_time'] = ['>= time',strtotime($seach['datemin'])];
            } elseif ($seach['datemax']) {
                $where['add_time'] = ['<= time',strtotime($seach['datemax'].$time)];
            }
        }

        $list = Db::name('ad')->where($where)->paginate($page);
        //处理创造者
//        foreach ($list as $key=>$value){
//            $list[$key]['user_id']=get_admin_name($value['user_id']);
//            $list[$key]['add_time']=date('Y-m-d H:i:s',$value['add_time']);
//            $list[$key]['update_time']=date('Y-m-d H:i:s',$value['update_time']);
//        }
        $count = count($list);
        $this->assign('seach',$seach);
        $this->assign('list',$list);
        $this->assign('count',$count);
        $this->assign('pid',$pid);
        return $this->fetch();
    }

//    // 搜索条件
//    public function s_condition($conditions, $datemins, $datemaxs,$role)
//    {
//        $time = " 23:59:59";
//        if ($conditions) {
//            $m_conditions = str_replace(' ', '', $conditions);
//            $where['name'] = ['like', "%$m_conditions%"];
//        }
//        if ($datemins && $datemaxs) {
//            $datemin = strtotime($datemins);
//            $datemax = strtotime($datemaxs . $time);
//            $where['addtime'] = [['>= time', $datemin], ['<= time', $datemax], 'and'];
//        } elseif ($datemins) {
//            $where['addtime'] = ['>= time', strtotime($datemins)];
//        } elseif ($datemaxs) {
//            $where['addtime'] = ['<= time', strtotime($datemaxs . $time)];
//        } elseif ($role) {
//            $where['group_id'] = $role;
//        }
//        return $where;
//    }
    //添加广告位弹框
    public function add_position()
    {
        $act = 'add';
        $this->assign('act',$act);
        return $this->fetch();
    }
    //添加广告弹框
    public function add()
    {
        $act = 'add';
        $pid=input('pid');
        $this->assign('act',$act);
        $this->assign('pid',$pid);
        return $this->fetch();
    }
    //编辑广告位
    public function edit_position()
    {
        $art_id = input('get.id/d');
        $act = 'edit';
        $info = Db::name('ad_position')->where('id',$art_id)->find();
        $this->assign('info',$info);
        $this->assign('art_id',$art_id);
        $this->assign('act',$act);
        return $this->fetch();
    }
    //编辑广告
    public function edit()
    {
        $art_id = input('get.id/d');
        $act = 'edit';
        $info = Db::name('ad')->where('id',$art_id)->find();
        $this->assign('info',$info);
        $this->assign('id',$art_id);
        $this->assign('act',$act);
        return $this->fetch();
    }
    //操作广告位
    public function handle_position()
    {
        $data = input('post.');

        if ($data['act'] == 'add') {
            $data1 = [
                'name' => $data['name'],
                'desc' => $data['desc'],
                'user_id'   => session('admin_id'),
                'add_time'  => time(),
                'update_time'  => time()
            ];
            $res = Db::name('ad_position')->insert($data1);
            if ($res) {
                return json(['status'=>1,'msg'=>'添加成功']);
            }else{
                return json(['status'=>-1,'msg'=>'添加失败']);
            }
        }
        if ($data['act'] == 'edit') {
            $data1 = [
                'desc' => $data['desc'],
                'name' => $data['name'],
                'user_id'   => session('admin_id'),
                'update_time'  => time()
            ];
            $res = Db::name('ad_position')->where('id',$data['id'])->update($data1);
            if ($res) {
                return json(['status'=>1,'msg'=>'修改成功']);
            }else{
                return json(['status'=>-1,'msg'=>'修改失败']);
            }
        }
    }
    //操作广告
    public function handle(Request $request)
    {
        $files = $request->file();
//        var_dump($files);die;
        $data = input('post.');
//var_dump($data);die;
        if(isset($data) && !empty($data['image'])){
            $ali_code=$data['image'];
        }else{
            $ali_code='';
        }
        if($files){
            $img_path = 'public/upload/ad/';
            if(!is_dir(ROOT_PATH.$img_path)){
                mkdir(ROOT_PATH.$img_path,0777,true);
            }

            if(isset($files['image'])){
                $ali = $files['image']->getInfo();
                $img_type=explode('.',$ali['name']);
//                echo $ali['name'];
//                var_dump($img_type);die;
                $img_type=$img_type[1];
                if ($ali['error']>0){
                    return json(['status'=>-1,'msg'=>'图片上传错误']);
                }elseif($ali['size']>20000000){
                    return json(['status'=>-1,'msg'=>'图片超过了20M']);

                }elseif(!in_array($ali['type'],array('image/gif','image/jpeg','image/png','image/jpg'))){
                    return json(['status'=>-1,'msg'=>'图片格式有误']);

                }

                $ali['name'] = md5(mt_rand(0,100000).time()); //文件名
                $ali_code = '/'.$img_path.$ali['name'].'.'.$img_type;//dump($info);die;
                move_uploaded_file($ali['tmp_name'], ROOT_PATH . '/' . $img_path . $ali['name'].'.'.$img_type);
            }
//            echo $ali_code;die;

        }
//        echo $ali_code;die;
        if ($data['act'] == 'add') {
            $data1 = [
                'name' => $data['name'],
                'desc' => $data['desc'],
                'user_id'   => session('admin_id'),
                'add_time'  => time(),
                'update_time'  => time(),
                'image'  => $ali_code,
                'pid'  => $data['pid']
            ];
            $res = Db::name('ad')->insert($data1);
            if ($res) {
                return json(['status'=>1,'msg'=>'添加成功']);
            }else{
                return json(['status'=>-1,'msg'=>'添加失败']);
            }
        }
        if ($data['act'] == 'edit') {
            $data1 = [
                'desc' => $data['desc'],
                'name' => $data['name'],
                'user_id'   => session('admin_id'),
                'update_time'  => time(),
                'image'  => $ali_code
//                'pid'  => $data['pid']
            ];
            $res = Db::name('ad')->where(['id'=>$data['id'],'pid'=>$data['pid']])->update($data1);
            if ($res) {
                return json(['status'=>1,'msg'=>'编辑成功']);
            }else{
                return json(['status'=>-1,'msg'=>'编辑失败']);
            }
        }
    }
    //删除广告位
    public function del_position()
    {
        $data = input('post.');//dump($art_id);die;
        if ($_POST) {
            $id = json_decode($data['id'], true);
            //下面有广告先让客户删除广告
            $is_ad=Db::name('ad')->where(['pid'=>$data['id']])->count();
            if($is_ad) return json(['status'=>-1,'msg'=>'请先删除该广告位下面的广告']);
            $where['id'] = array('in', $id);
            $res = Db::name('ad_position')->where($where)->delete();
            if ($res) {
                return json(['status'=>1,'msg'=>'删除成功']);
            }else {
                return json(['status'=>-1,'msg'=>'删除失败']);
            }
        }
    }

    //删除广告
    public function del()
    {
        $data = input('post.');//dump($art_id);die;
        if ($_POST) {
            $id = json_decode($data['id'], true);
            $where['id'] = array('in', $id);
            $res = Db::name('ad')->where($where)->delete();
            if ($res) {
                return json(['status'=>1,'msg'=>'删除成功']);
            }else {
                return json(['status'=>-1,'msg'=>'删除失败']);
            }
        }
    }
}